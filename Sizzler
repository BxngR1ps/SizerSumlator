-- Load the existing script
loadstring(game:HttpGet('https://pastebin.com/raw/cwDSpepQ', true))()

local first = library:AddWindow('SizerSumlator - by KðŸŒ¹rl')
local first_tab = first:AddTab('github/BxngR1ps')

-- Variables for switches
local this_game_sucks = false
local meat = false
local coin = false

-- Add switches for gameplay control
first_tab:AddSwitch('Auto Defeat Chickens (Random)', function(a)
    this_game_sucks = a
end)

first_tab:AddSwitch('Auto Collect Meat (every Meat)', function(a)
    meat = a
end)

first_tab:AddSwitch('Auto Farm Coins', function(a)
    coin = a
end)

-- Adding a button for Infinite Yield execution
first_tab:AddButton('Click All (Useful)', function()
    --// Grab player
	local player = game.Players.LocalPlayer
	local char = player.Character or player.CharacterAdded:Wait()
	local root = char:WaitForChild("HumanoidRootPart")

	--// Loop through everything in workspace
	for _, v in ipairs(workspace:GetDescendants()) do
		if v:IsA("TouchTransmitter") or v.Name == "TouchInterest" then
			firetouchinterest(root, v.Parent, 0)
			firetouchinterest(root, v.Parent, 1)
		end
	end


game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Click Everything",
    Text = "lul but useful",
    Icon = "rbxassetid://86501960555905"
})
end)

-- Remote event setup
local RemoteEvent = game:GetService("ReplicatedStorage").RemoteEvent
local last = math.huge
local nearest = nil
local id = nil

-- Function to spawn for attacking chickens
spawn(function()
    while wait() do
        for i, v in pairs(game.workspace:GetChildren()) do	
            if v:FindFirstChild('CharId') and this_game_sucks then
                local distance = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v:FindFirstChildWhichIsA('Part').Position).magnitude
                if distance < last then
                    last = distance
                    nearest = v:FindFirstChildWhichIsA('Part') 
                    id = v.CharId.Value
                end
            end
        end
    end
end)

spawn(function()
    while wait() do
        for i, v in pairs(game.workspace:GetChildren()) do	
            if nearest ~= nil and id ~= nil and v:FindFirstChild('CharId') and this_game_sucks and v.CharId.Value == id then
                RemoteEvent:FireServer("Animal Selected", v.CharId.Value)
                repeat
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = nearest.CFrame
                    for i = 1, 10 do
                        RemoteEvent:FireServer("Animal Hit", v.CharId.Value)
                    end
                    wait()
                until not v or not v:FindFirstChild('CharId') or not v:FindFirstChildWhichIsA('Part') or not nearest or not nearest.Parent or not this_game_sucks
                last, nearest, id = math.huge, nil, nil
            end
        end
    end
end)

spawn(function()
    while wait() do
        if meat then
            for i, v in pairs(game.workspace:GetChildren()) do 
                if string.find(v.Name:lower(), "meat") and v.Name ~= "DropOffMeat" and v:FindFirstChild("Main") then
                    v.Main.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                end
            end
            RemoteEvent:FireServer('Drop Off Meat')
            RemoteEvent:FireServer('Collect Grill Coins')
        end
        if coin then
            for i, v in pairs(game:GetService("Workspace").Currency:GetChildren()) do
                if v:FindFirstChildWhichIsA('Part') and v:FindFirstChildWhichIsA('Part'):FindFirstChild('TouchInterest') then
                    v:FindFirstChildWhichIsA('Part').CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                end
            end
        end
    end
end)

-- Create a second tab for additional features
local second_tab = first:AddTab('Extras')

local player = game.Players.LocalPlayer
-- Wait for character to load
local character = player.Character or player.CharacterAdded:Wait()
local spinning = false
local spinSpeed = 10 -- Speed at which to spin

-- Function to start spinning
local function startSpinning()
    spinning = true
    while spinning do
        wait(0) -- Lower the wait time for smoother spinning
        if character and character:FindFirstChild("HumanoidRootPart") then
            -- Rotate the HumanoidRootPart
            character.HumanoidRootPart.CFrame = character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(spinSpeed), 0)
        end
    end
end

-- Function to stop spinning
local function stopSpinning()
    spinning = false
end

-- Adding the Spin switch to the UI
second_tab:AddSwitch('Spin', function(svalue)
    if svalue then
        startSpinning() -- Start spinning when switch is on
    else
        stopSpinning() -- Stop spinning when switch is off
    end
end)

local player = game.Players.LocalPlayer
local UIS = game:GetService("UserInputService")
local flying = false
local speed = 50 -- Speed at which the player flies
local bodyVelocity

local function startFlying()
    flying = true
    player.Character.Humanoid.PlatformStand = true  -- Prevents the player from falling
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000) -- Adjust force to your liking
    bodyVelocity.Parent = player.Character.PrimaryPart

    -- Control flying with keyboard input
    while flying do
        wait(0.1)
        
        local direction = Vector3.new(0, 0, 0)
        
        if UIS:IsKeyDown(Enum.KeyCode.W) then
            direction = direction + workspace.CurrentCamera.CFrame.LookVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.S) then
            direction = direction - workspace.CurrentCamera.CFrame.LookVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.A) then
            direction = direction - workspace.CurrentCamera.CFrame.RightVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.D) then
            direction = direction + workspace.CurrentCamera.CFrame.RightVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.Space) then
            direction = direction + Vector3.new(0, 1, 0) -- Move up
        end
        if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
            direction = direction - Vector3.new(0, 1, 0) -- Move down
        end
        
        bodyVelocity.Velocity = direction * speed
    end

    -- Cleanup
    bodyVelocity:Destroy()
    player.Character.Humanoid.PlatformStand = false
end

local function stopFlying()
    flying = false
end

-- Adding a fly toggle switch to the second tab
second_tab:AddSwitch('Fly', function(value)
    if value then
        startFlying()
    else
        stopFlying()
    end
end)

local player = game.Players.LocalPlayer

local function updateWalkSpeed(value)
    player.Character.Humanoid.WalkSpeed = value
end

-- Create a slider for WalkSpeed
second_tab:AddSlider('WalkSpeed', function(value)
    updateWalkSpeed(value)
end)

-- Initialize the WalkSpeed to the default value
updateWalkSpeed(16)

-- Anti-AFK Script

local player = game.Players.LocalPlayer
local userInputService = game:GetService("UserInputService")

-- Function to simulate player activity
local function keepActive()
    while wait(10) do -- Adjust the wait time as needed
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            -- Move player slightly to simulate activity
            player.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -0.1)
        end
    end
end

-- Create a toggle for the Anti-AFK in the GUI
second_Tab:AddToggle('Toggle Anti-AFK', false, function(state)
    if state then
        keepActive() -- Start the anti-AFK loop
    else
        -- You can create a method to safely stop the anti-AFK if needed
        -- If the anti-AFK is running in a separate function, implement a way to stop it
    end
end)
